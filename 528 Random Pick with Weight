class Solution {
    // sum weights, Random to get random int. BS to get index
    int[] indices;

    public Solution(int[] w) {
        indices = new int[w.length];
        indices[0] = w[0];
        for (int i = 1; i < w.length; i++) {
            indices[i] = indices[i - 1] + w[i];
        } // e.g. [10, 10, 20] -> [10, 20, 40] 
    }
    private int binarySearch(int target) { // ret index where val >= target
        int s = 0, e = indices.length - 1;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            int val = indices[mid];
            if (target > val) s = mid + 1;
            else if (target == val) return mid;
            else {
                e = mid - 1;
            }
        }
        return s;
    }
    
    public int pickIndex() {
        int r = new Random().nextInt(indices[indices.length - 1]) + 1;
        return binarySearch(r);
    }
}
